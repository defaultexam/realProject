<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.restaurant.user.member.dao.MemberDAO">
	<select id="securitySelect" parameterType="String" resultType="security">
		select userid, salt from security
		where userId=#{userId}
	</select>
	<insert id="securityInsert" parameterType="security">
		insert into
		security(userid, salt)
		values(#{userId}, #{salt})
	</insert>
	<delete id="securityDelete" parameterType="String">
		delete from security
		where userId = #{userId}
	</delete>

	<select id="memberSelect" parameterType="String" resultType="member">
		select member_no, id, password, name, gender, birthday,
		email, phone,
		address, marriage, weddingdate, job, agreement1,
		agreement2, agreement3
		from
		member
		where id = #{id}
	</select>
	<insert id="memberInsert" parameterType="member">
		<selectKey keyProperty="idx" resultType="int" order="BEFORE">
			select
			member_seq.nextval from dual
		</selectKey>
		insert into member(member_no, id, password, name, gender, birthday,
		email, phone, address, marriage, weddingdate, job, agreement1,
		agreement2, agreement3)
		values(#{idx}, #{id}, #{password}, #{name},
		#{gender}, #{birthday}, #{email}, #{phone}, #{address}, #{marriage},
		#{weddingdate}, #{job}, #{agreement1}, #{agreement2}, #{agreement3})
	</insert>
	<update id="memberUpdate" parameterType="member">
		update spring_member set
		<if test="userPw != null and userPw != ''">
			userPw=#{userPw},
		</if>
		phone=#{phone}, email=#{email} where userId=#{userId}
	</update>
	<delete id="memberDelete" parameterType="String">
		delete from
		spring_member where userId = #{userId}
	</delete>
</mapper>
